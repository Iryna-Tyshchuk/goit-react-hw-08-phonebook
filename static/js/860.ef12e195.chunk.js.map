{"version":3,"file":"static/js/860.ef12e195.chunk.js","mappings":"4LACaA,E,QAAQC,GAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yMAGtB,SAAAC,GAAK,OAAIA,EAAMC,YAAc,eAAe,G,gHCFnDC,EAAY,YAgFT,IAAIC,EAAuB,SAA8BC,EAAGC,GACjE,OAAOD,IAAMC,CACf,EAqBO,SAASC,EAAeC,EAAMC,GACnC,IAAIC,EAAoD,kBAA3BD,EAAsCA,EAAyB,CAC1FE,cAAeF,GAEbG,EAAwBF,EAAgBC,cACxCA,OAA0C,IAA1BC,EAAmCR,EAAuBQ,EAC1EC,EAAwBH,EAAgBI,QACxCA,OAAoC,IAA1BD,EAAmC,EAAIA,EACjDE,EAAsBL,EAAgBK,oBACtCC,EA7BC,SAAkCL,GACvC,OAAO,SAAoCM,EAAMC,GAC/C,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAKE,SAAWD,EAAKC,OACzD,OAAO,EAMT,IAFA,IAAIA,EAASF,EAAKE,OAETC,EAAI,EAAGA,EAAID,EAAQC,IAC1B,IAAKT,EAAcM,EAAKG,GAAIF,EAAKE,IAC/B,OAAO,EAIX,OAAO,CACT,CACF,CAYmBC,CAAyBV,GACtCW,EAAoB,IAAZR,EA/Gd,SAA8BS,GAC5B,IAAIC,EACJ,MAAO,CACLC,IAAK,SAAaC,GAChB,OAAIF,GAASD,EAAOC,EAAME,IAAKA,GACtBF,EAAMG,MAGRxB,CACT,EACAyB,IAAK,SAAaF,EAAKC,GACrBH,EAAQ,CACNE,IAAKA,EACLC,MAAOA,EAEX,EACAE,WAAY,WACV,OAAOL,EAAQ,CAACA,GAAS,EAC3B,EACAM,MAAO,WACLN,OAAQO,CACV,EAEJ,CAwF8BC,CAAqBhB,GAtFnD,SAAwBF,EAASS,GAC/B,IAAIU,EAAU,GAEd,SAASR,EAAIC,GACX,IAAIQ,EAAaD,EAAQE,WAAU,SAAUX,GAC3C,OAAOD,EAAOG,EAAKF,EAAME,IAC3B,IAEA,GAAIQ,GAAc,EAAG,CACnB,IAAIV,EAAQS,EAAQC,GAOpB,OALIA,EAAa,IACfD,EAAQG,OAAOF,EAAY,GAC3BD,EAAQI,QAAQb,IAGXA,EAAMG,KACf,CAGA,OAAOxB,CACT,CAwBA,MAAO,CACLsB,IAAKA,EACLG,IAxBF,SAAaF,EAAKC,GACZF,EAAIC,KAASvB,IAEf8B,EAAQI,QAAQ,CACdX,IAAKA,EACLC,MAAOA,IAGLM,EAAQd,OAASL,GACnBmB,EAAQK,MAGd,EAaET,WAXF,WACE,OAAOI,CACT,EAUEH,MARF,WACEG,EAAU,EACZ,EAQF,CAmCiEM,CAAezB,EAASE,GAEvF,SAASwB,IACP,IAAIb,EAAQL,EAAMG,IAAIgB,WAEtB,GAAId,IAAUxB,EAAW,CAIvB,GAFAwB,EAAQnB,EAAKkC,MAAM,KAAMD,WAErB1B,EAAqB,CACvB,IACI4B,EADUrB,EAAMO,aACQe,MAAK,SAAUpB,GACzC,OAAOT,EAAoBS,EAAMG,MAAOA,EAC1C,IAEIgB,IACFhB,EAAQgB,EAAchB,MAE1B,CAEAL,EAAMM,IAAIa,UAAWd,EACvB,CAEA,OAAOA,CACT,CAMA,OAJAa,EAASK,WAAa,WACpB,OAAOvB,EAAMQ,OACf,EAEOU,CACT,CChIO,SAASM,EAAsBC,GACpC,IAAK,IAAIC,EAAOP,UAAUtB,OAAQ8B,EAAyB,IAAIC,MAAMF,EAAO,EAAIA,EAAO,EAAI,GAAIG,EAAO,EAAGA,EAAOH,EAAMG,IACpHF,EAAuBE,EAAO,GAAKV,UAAUU,GAiF/C,OA9EqB,WACnB,IAAK,IAAIC,EAAQX,UAAUtB,OAAQkC,EAAQ,IAAIH,MAAME,GAAQE,EAAQ,EAAGA,EAAQF,EAAOE,IACrFD,EAAMC,GAASb,UAAUa,GAG3B,IAEIC,EAFAC,EAAkB,EAOlBC,EAAwB,CAC1BC,oBAAgB3B,GAGd4B,EAAaN,EAAMf,MAQvB,GAN0B,kBAAfqB,IACTF,EAAwBE,EAExBA,EAAaN,EAAMf,OAGK,oBAAfqB,EACT,MAAM,IAAIC,MAAM,qFAAuFD,EAAa,KAKtH,IACIE,EADwBJ,EACuBC,eAC/CA,OAA4C,IAA3BG,EAAoCZ,EAAyBY,EAM9EC,EAAsBZ,MAAMa,QAAQL,GAAkBA,EAAiB,CAACA,GACxEM,EA3DR,SAAyBX,GACvB,IAAIW,EAAed,MAAMa,QAAQV,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKW,EAAaC,OAAM,SAAUC,GAChC,MAAsB,oBAARA,CAChB,IAAI,CACF,IAAIC,EAAkBH,EAAaI,KAAI,SAAUF,GAC/C,MAAsB,oBAARA,EAAqB,aAAeA,EAAIG,MAAQ,WAAa,YAAcH,CAC3F,IAAGI,KAAK,MACR,MAAM,IAAIV,MAAM,kGAAoGO,EAAkB,IACxI,CAEA,OAAOH,CACT,CA8CuBO,CAAgBlB,GAC/BmB,EAAqBzB,EAAQL,WAAM,EAAQ,CAAC,WAG9C,OAFAc,IAEOG,EAAWjB,MAAM,KAAMD,UAChC,GAAGgC,OAAOX,IAENY,EAAW3B,GAAQ,WAIrB,IAHA,IAAI4B,EAAS,GACTxD,EAAS6C,EAAa7C,OAEjBC,EAAI,EAAGA,EAAID,EAAQC,IAG1BuD,EAAOC,KAAKZ,EAAa5C,GAAGsB,MAAM,KAAMD,YAK1C,OADAc,EAAciB,EAAmB9B,MAAM,KAAMiC,EAE/C,IAeA,OAdAE,OAAOC,OAAOJ,EAAU,CACtBf,WAAYA,EACZa,mBAAoBA,EACpBR,aAAcA,EACde,WAAY,WACV,OAAOxB,CACT,EACAyB,eAAgB,WACd,OAAOxB,CACT,EACAyB,oBAAqB,WACnB,OAAOzB,EAAkB,CAC3B,IAEKkB,CACT,CAIF,CACO,I,EAAIQ,EAAgCpC,EAAsBvC,GCrGpD4E,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,YAAYC,QAAS,EACrDC,EAAsB,SAAAH,GAAK,OAAIA,EAAMC,YAAYG,MAAO,EACxDC,EAAqB,SAAAL,GAAK,OAAIA,EAAMC,YAAYK,KAAM,EACtDC,EAAe,SAAAP,GAAK,OAAIA,EAAMC,YAAYO,MAAO,EAEjDC,EAAyBX,EACpC,CAACC,EAAgBQ,IACjB,SAACL,EAAUM,GACT,OAAON,EAASM,QAAO,SAAAE,GAAO,OAAAA,EAAJzB,KACnB0B,cAAcC,OAAOC,SAASL,EAAOG,cAAc,GAE5D,I,uCCRWG,EAAS,WACpB,IAAMN,GAASO,EAAAA,EAAAA,IAAYR,GACrBS,GAAWC,EAAAA,EAAAA,MAMjB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,0BACHC,EAAAA,EAAAA,KAAC3G,EAAAA,EAAK,CAAC4G,KAAK,OAAOpC,KAAK,SAAS1C,MAAOiE,EAAQc,SAP/B,SAAAC,GACnBP,GAASQ,EAAAA,EAAAA,GAAaD,EAAME,OAAOlF,OACrC,MAQF,E,UCdamF,EAAc,SAAHhB,GAA8B,IAAxBzB,EAAIyB,EAAJzB,KAAM0C,EAAMjB,EAANiB,OAAQC,EAAElB,EAAFkB,GACpCZ,GAAWC,EAAAA,EAAAA,MACjB,OACEG,EAAAA,EAAAA,KAAAS,EAAAA,SAAA,CAAAV,UACED,EAAAA,EAAAA,MAAA,MAAIY,MAAO,CAAEC,QAAS,OAAQC,eAAgB,iBAAkBb,SAAA,EAC9DD,EAAAA,EAAAA,MAAA,KAAGY,MAAO,CAAEG,SAAU,QAASd,SAAA,CAC5BlC,EAAK,KAAG0C,MAEXP,EAAAA,EAAAA,KAACc,EAAAA,EAAM,CAACC,QAAS,kBAAMnB,GAASoB,EAAAA,EAAAA,IAAqBR,GAAI,EAACT,SAAC,eAMnE,ECfakB,EAAc,WACzB,IAAMC,GAAmBvB,EAAAA,EAAAA,IAAYN,GAErC,OACEW,EAAAA,EAAAA,KAAA,MAAAD,SACGmB,EAAiBtD,KAAI,SAAA0B,GAAA,IAAGkB,EAAElB,EAAFkB,GAAI3C,EAAIyB,EAAJzB,KAAM0C,EAAMjB,EAANiB,OAAM,OACvCP,EAAAA,EAAAA,KAACM,EAAW,CAAUzC,KAAMA,EAAM0C,OAAQA,EAAQC,GAAIA,GAApCA,EAA0C,KAIpE,E,mBCbaW,E,QAAa7H,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6FCS9B,SAAS4H,IACd,IAAMtC,GAAWa,EAAAA,EAAAA,IAAYhB,GACvBiB,GAAWC,EAAAA,EAAAA,MAEjBwB,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BxD,EAAI0D,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjCnB,EAAMoB,EAAA,GAAEC,EAASD,EAAA,GAElBE,EAAe,SAAHvC,GAAqC,IAADwC,EAAAxC,EAA9Be,OAAUxC,EAAIiE,EAAJjE,KAAM1C,EAAK2G,EAAL3G,MACzB,SAAT0C,GAAiB4D,EAAQtG,GAChB,WAAT0C,GAAmB+D,EAAUzG,EACnC,EAkBA,OACE2E,EAAAA,EAAAA,MAACqB,EAAU,CAACY,SAjBO,SAAA5B,GAMnB,GALAA,EAAM6B,iBACelD,EAASmD,MAC5B,SAAAC,GAAO,OAAIA,EAAQrE,KAAK0B,gBAAkB1B,EAAK0B,aAAa,IAK5D,OADA4C,MAAM,WAADlE,OAAYJ,EAAI,yBACd,EAET+B,GAASwC,EAAAA,EAAAA,IAAkB,CAAEvE,KAAMA,EAAK2B,OAAQe,OAAAA,KAEhDkB,EAAQ,IACRG,EAAU,GACZ,EAGqC7B,SAAA,EACjCD,EAAAA,EAAAA,MAAA,SAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,WACHC,EAAAA,EAAAA,KAAC3G,EAAAA,EAAK,CACJ4G,KAAK,OACLpC,KAAK,OACLwE,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRrC,SAAU2B,EACV1G,MAAO0C,QAGXiC,EAAAA,EAAAA,MAAA,SAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,aACHC,EAAAA,EAAAA,KAAC3G,EAAAA,EAAK,CACJ4G,KAAK,MACLpC,KAAK,SACLwE,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRrC,SAAU2B,EACV1G,MAAOoF,QAGXP,EAAAA,EAAAA,KAACc,EAAAA,EAAM,CAACb,KAAK,SAAQF,SAAC,kBAG5B,C,kCCpDA,MAVA,SAA0ByC,EAAWC,GAOnC,OAN8B,SAAAhJ,GAG5B,OAFmBkG,EAAAA,EAAAA,IAAY+C,EAAAA,KAEX1C,EAAAA,EAAAA,KAACwC,GAASG,EAAAA,EAAAA,GAAA,GAAKlJ,KAAYuG,EAAAA,EAAAA,KAAC4C,EAAAA,GAAQ,CAACC,GAAIJ,GAC/D,CAGF,E,UC4CA,MAAeK,GAtCf,WACE,IAAMlD,GAAWC,EAAAA,EAAAA,MACXkD,GAAapD,EAAAA,EAAAA,IAAY+C,EAAAA,IACzB5D,GAAWa,EAAAA,EAAAA,IAAYhB,GACvBK,GAASW,EAAAA,EAAAA,IAAYZ,GACrBG,GAAQS,EAAAA,EAAAA,IAAYV,GAc1B,OAZA+D,EAAAA,EAAAA,YAAU,WACHD,GAELnD,GAASqD,EAAAA,EAAAA,MACX,GAAG,CAACrD,EAAUmD,KAEdC,EAAAA,EAAAA,YAAU,WACJ9D,GACFgE,EAAAA,GAAAA,MAAY,8BAEhB,GAAG,CAAChE,KAGFY,EAAAA,EAAAA,MAAA,QAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAImD,UAAWC,EAAAA,EAAAA,OAAWrD,SAAC,gBAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJC,EAAAA,EAAAA,KAACoB,EAAW,KACZpB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACkB,KAAb,OAARjB,QAAQ,IAARA,OAAQ,EAARA,EAAUnE,SACTmF,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAV,SAAA,EACEC,EAAAA,EAAAA,KAACN,EAAM,KACPM,EAAAA,EAAAA,KAACiB,EAAW,QAGdjB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,6BAGO,YAAXf,IAAwBgB,EAAAA,EAAAA,KAACqD,EAAAA,EAAM,MAGtC,GAC8C,S,qBCxD9C,KAAgB,OAAS,oB","sources":["components/Input/Input.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactForm.jsx/ContactForm.styled.jsx","components/ContactForm.jsx/ContactForm.jsx","HOC/WithAuthRedirect.jsx","pages/ContactsPage.jsx","webpack://goit-react-hw-08-phonebook/./src/components/App/App.module.css?583a"],"sourcesContent":["import styled from 'styled-components';\nexport const Input = styled.input`\n  padding: 0.5em;\n  margin: 0.5em;\n  color: ${props => props.inputColor || 'palevioletred'};\n  background: papayawhip;\n  border: none;\n  border-radius: 3px;\n  width: 200px;\n  height: 20px;\n  &:active {\n    border: none;\n  }\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contactData.contacts;\nexport const selectContactStatus = state => state.contactData.status;\nexport const selectContactError = state => state.contactData.error;\nexport const selectFilter = state => state.contactData.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().trim().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { handleFilter } from 'redux/contacts/slice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { Input } from '../Input/Input';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    dispatch(handleFilter(event.target.value));\n  };\n\n  return (\n    <div>\n      <p>Find contact by name</p>\n      <Input type=\"text\" name=\"filter\" value={filter} onChange={handleChange} />\n    </div>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { Button } from 'components/Button/Button';\nimport { useDispatch } from 'react-redux';\nimport { deleteContactRequest } from 'redux/contacts/operations';\n\nexport const ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <li style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <p style={{ fontSize: '16px' }}>\n          {name}: {number}\n        </p>\n        <Button onClick={() => dispatch(deleteContactRequest(id))}>\n          Delete\n        </Button>\n      </li>\n    </>\n  );\n};\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { ContactItem } from '../ContactItem/ContactItem';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <ul>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactItem key={id} name={name} number={number} id={id} />\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-bottom: 20px;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContactRequest } from 'redux/contacts/operations';\n\nimport { Button } from 'components/Button/Button';\nimport { Input } from '../Input/Input';\nimport { StyledForm } from './ContactForm.styled';\n\nexport function ContactForm() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isInContacts = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isInContacts) {\n      alert(`Contact ${name} is already exists!`);\n      return false;\n    }\n    dispatch(addContactRequest({ name: name.trim(), number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <label>\n        <p>Name:</p>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </label>\n      <label>\n        <p>Number:</p>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n      </label>\n      <Button type=\"submit\">Add contact</Button>\n    </StyledForm>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectIsLoggedIn } from 'redux/auth/selectors';\n\nfunction WithAuthRedirect(Component, navigateTo) {\n  const ComponentWithRedirect = props => {\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n\n    return isLoggedIn ? <Component {...props} /> : <Navigate to={navigateTo} />;\n  };\n\n  return ComponentWithRedirect;\n}\n\nexport default WithAuthRedirect;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { getContactsRequest } from 'redux/contacts/operations';\nimport {\n  selectContactError,\n  selectContacts,\n  selectContactStatus,\n} from 'redux/contacts/selectors';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm.jsx/ContactForm';\nimport { selectIsLoggedIn } from 'redux/auth/selectors';\nimport WithAuthRedirect from 'HOC/WithAuthRedirect';\nimport css from '../components/App/App.module.css';\n\nfunction ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const contacts = useSelector(selectContacts);\n  const status = useSelector(selectContactStatus);\n  const error = useSelector(selectContactError);\n\n  useEffect(() => {\n    if (!isLoggedIn) return;\n\n    dispatch(getContactsRequest());\n  }, [dispatch, isLoggedIn]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error('Sorry, something went wrong');\n    }\n  }, [error]);\n\n  return (\n    <main>\n      <h1 className={css.hidden}>Phone book</h1>\n      <h2>Add new contact</h2>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {contacts?.length !== 0 ? (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      ) : (\n        <p>You haven't any contacts</p>\n      )}\n\n      {status === 'pending' && <Loader />}\n    </main>\n  );\n}\nexport default WithAuthRedirect(ContactsPage, '/login');\n","// extracted by mini-css-extract-plugin\nexport default {\"hidden\":\"App_hidden__J7bDI\"};"],"names":["Input","styled","_templateObject","_taggedTemplateLiteral","props","inputColor","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","Array","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","Error","_directlyPassedOption2","finalMemoizeOptions","isArray","dependencies","every","dep","dependencyTypes","map","name","join","getDependencies","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","createSelector","selectContacts","state","contactData","contacts","selectContactStatus","status","selectContactError","error","selectFilter","filter","selectFilteredContacts","_ref","toLowerCase","trim","includes","Filter","useSelector","dispatch","useDispatch","_jsxs","children","_jsx","type","onChange","event","handleFilter","target","ContactItem","number","id","_Fragment","style","display","justifyContent","fontSize","Button","onClick","deleteContactRequest","ContactList","filteredContacts","StyledForm","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","handleChange","_ref$target","onSubmit","preventDefault","some","contact","alert","addContactRequest","pattern","title","required","Component","navigateTo","selectIsLoggedIn","_objectSpread","Navigate","to","WithAuthRedirect","isLoggedIn","useEffect","getContactsRequest","toast","className","css","Loader"],"sourceRoot":""}